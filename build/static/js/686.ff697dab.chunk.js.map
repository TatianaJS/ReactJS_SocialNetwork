{"version":3,"file":"static/js/686.ff697dab.chunk.js","mappings":"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","sources":["webpack://my-app/./src/css/Profile/ProfileInfo/ProfileInfo.module.css?6a95","components/Profile/ProfileInfo/MyContacts.jsx","webpack://my-app/./src/css/Profile/ProfileInfo/ProfileStatus.module.css?b3d8","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/MyData.jsx","components/Profile/ProfileInfo/MyDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://my-app/./src/css/Profile/MyPosts/Post.module.css?fc82","components/Profile/MyPosts/Post.jsx","webpack://my-app/./src/css/Profile/MyPosts/MyPost.module.css?9f70","components/Profile/MyPosts/MyPost.jsx","components/Profile/MyPosts/MyPostContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"avatar\":\"ProfileInfo_avatar__mPI1M\",\"info_page\":\"ProfileInfo_info_page__AcAxs\",\"line_one\":\"ProfileInfo_line_one__zibQr\",\"fio\":\"ProfileInfo_fio__rZlZ6\",\"data\":\"ProfileInfo_data__CnqZf\",\"info\":\"ProfileInfo_info__6syOr\",\"contacts_list\":\"ProfileInfo_contacts_list__6UIn1\",\"separate\":\"ProfileInfo_separate__P-1jn\",\"contact\":\"ProfileInfo_contact__TJwL2\"};","import React from 'react';\r\n\r\nconst MyContact = ({contactTitle, contactValue}) => {\r\n    return <span>\r\n        <b>{contactTitle}:</b> {contactValue}\r\n    </span>\r\n}\r\n\r\nexport default MyContact;","// extracted by mini-css-extract-plugin\nexport default {\"profile_status\":\"ProfileStatus_profile_status__3cExP\",\"profile_status__input\":\"ProfileStatus_profile_status__input__pysrj\"};","import React, { useEffect, useState } from 'react';\r\nimport classes from '../../../css/Profile/ProfileInfo/ProfileStatus.module.css';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const onEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const offEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            { !editMode &&\r\n                <div className={classes.profile_status}>\r\n                    <span onDoubleClick={onEditMode}>\r\n                        <b>Статус:</b> {props.status || '–'}\r\n                    </span>\r\n                </div>\r\n            }\r\n            { editMode &&\r\n                <div className={classes.profile_status__input}>\r\n                    <input \r\n                        autoFocus={true}\r\n                        onBlur={offEditMode}\r\n                        onChange={onStatusChange}\r\n                        value={status} />\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport classes from '../../../css/Profile/ProfileInfo/ProfileInfo.module.css';\r\nimport noPhoto from '../../../assets/img/no-photo.png';\r\nimport MyContact from './MyContacts';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\n\r\nconst MyData = ({profile, isOwner, savePhoto, onEditMode, status, updateStatus}) => {\r\n    const onMyProfilePhotoUploading = (e) => {\r\n        if(e.target.files.length) {\r\n            savePhoto(e.target.files[0]);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.info_page}>\r\n            <div className={classes.avatar}>\r\n                <img \r\n                    src={profile.photos.large !== null ? profile.photos.large : noPhoto} \r\n                    alt='' \r\n                    className={classes.user_photo} />\r\n                {isOwner && \r\n                    <input type='file' onChange={onMyProfilePhotoUploading} />}\r\n            </div>\r\n            <div className={classes.data}>\r\n                <div className={classes.line_one}>\r\n                    <div className={classes.fio}>\r\n                        {profile.fullName}\r\n                        <ProfileStatusWithHooks \r\n                            status={status}\r\n                            updateStatus={updateStatus} />\r\n                    </div>\r\n                    {isOwner && <div>\r\n                        <button onClick={onEditMode}>\r\n                            Редактировать профиль\r\n                        </button>\r\n                    </div>}\r\n                </div>\r\n                <div className={classes.info}>\r\n                    {profile.aboutMe && \r\n                        <span><b>Обо мне:</b> {profile.aboutMe}</span>}\r\n                    <span><b>Ищу работу:</b> {profile.lookingForAJob ? 'Да' : 'Нет'}</span>\r\n                    {profile.lookingForAJobDescription && \r\n                        <span><b>Описание работы:</b> {profile.lookingForAJobDescription}</span>}\r\n                    <span className={classes.separate}>Контакты</span>\r\n                    {Object.keys(profile.contacts).map((key, index) => {\r\n                        return <MyContact \r\n                                    key={index} \r\n                                    contactTitle={key} \r\n                                    contactValue={profile.contacts[key]} />\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyData;","import React from 'react';\r\nimport { reduxForm } from 'redux-form';\r\nimport classes from '../../../css/Profile/ProfileInfo/ProfileInfo.module.css';\r\nimport { Input, Textarea, createField } from '../../../utils/FormControls/FormControls';\r\nimport noPhoto from '../../../assets/img/no-photo.png';\r\n\r\nconst MyDataForm = ({handleSubmit, profile, error}) => {\r\n    return (\r\n        <div className={classes.info_page}>\r\n            <div className={classes.avatar}>\r\n                <img \r\n                    src={profile.photos.large !== null ? profile.photos.large : noPhoto} \r\n                    alt='' \r\n                    className={classes.user_photo} />\r\n            </div>\r\n            <div className={classes.data}>\r\n                <form onSubmit={handleSubmit}>\r\n                    {createField(Input, 'fullName', 'Имя', 'input', [], '')}\r\n                    {createField(Textarea, 'aboutMe', 'Обо мне', '', [], '')}\r\n                    <label className=\"input_checkbox__customized\">\r\n                        {createField(Input, 'lookingForAJob', null, 'checkbox', [], 'Ищу работу')}\r\n                    </label>\r\n                    {createField(Textarea, 'lookingForAJobDescription', 'Описание работы', '', [], '')}\r\n                    <span>\r\n                        {Object.keys(profile.contacts).map(key => {\r\n                            return <div key={key} className={classes.contact}>\r\n                                    <b>{key}:</b> {createField(Input, 'contacts.' + key, key, 'input', [], '')}\r\n                                </div>\r\n                        })}\r\n                    </span>\r\n                    {error && \r\n                        <div className='form_error'>{error}</div>}\r\n                    <button type='submit'>\r\n                        Сохранить профиль\r\n                    </button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst MyDataFormReduxForm = reduxForm({\r\n    form: 'editProfile'\r\n})(MyDataForm);\r\n\r\nexport default MyDataFormReduxForm;","import React, { useState } from 'react';\r\nimport Preloader from '../../Preloader/Preloader';\r\nimport MyData from './MyData';\r\nimport MyDataForm from './MyDataForm';\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus, isOwner, saveProfile, savePhoto}) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n    if (!profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    const onSubmit = async(formData) => {\r\n        saveProfile(formData)\r\n            .then(() => {\r\n                setEditMode(false);\r\n            });\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            {editMode \r\n                ? <MyDataForm \r\n                    initialValues={profile}\r\n                    profile={profile} \r\n                    onSubmit={onSubmit} /> \r\n                : <MyData \r\n                    profile={profile} \r\n                    isOwner={isOwner}\r\n                    savePhoto={savePhoto}\r\n                    onEditMode={ () => {setEditMode(true)} }\r\n                    status={status}\r\n                    updateStatus={updateStatus} />\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileInfo;","// extracted by mini-css-extract-plugin\nexport default {\"posts\":\"Post_posts__Z-9AK\",\"item\":\"Post_item__rUzkX\",\"like\":\"Post_like__sV4zY\"};","import React from 'react';\r\nimport classes from '../../../css/Profile/MyPosts/Post.module.css';\r\nimport likeImg from '../../../assets/img/like__heart.png';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={classes.posts}>\r\n            <div className={classes.item}>\r\n                <img \r\n                    src={props.image} \r\n                    alt='' />\r\n                {props.message}\r\n                <span className={classes.like}>\r\n                    <img \r\n                        alt='likes'\r\n                        src={likeImg}/>\r\n                    {props.likes}\r\n                </span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;","// extracted by mini-css-extract-plugin\nexport default {\"entries\":\"MyPost_entries__uf0eo\"};","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport Post from '../MyPosts/Post';\r\nimport classes from '../../../css/Profile/MyPosts/MyPost.module.css';\r\nimport { Textarea } from '../../../utils/FormControls/FormControls';\r\nimport { requiredField, maxLengthCreator } from '../../../utils/Validators/Validators';\r\n\r\nconst MyPosts = React.memo(props => {\r\n    let postsEls = props.posts.map(msg => <Post message={msg.message} likes={msg.likes} key={msg.id} image={msg.image} />);\r\n\r\n    let addNewPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    };\r\n\r\n    return (\r\n        <div className={ classes.entries }>\r\n            <p>My posts</p>\r\n            <AddPostFormReduxForm onSubmit={ addNewPost } />\r\n            { postsEls }\r\n        </div>\r\n    );\r\n});\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst AddPostForm = (props) => {\r\n    return (\r\n        <div>\r\n            <form onSubmit={ props.handleSubmit }>\r\n                <Field \r\n                    component={Textarea}\r\n                    name='newPost'\r\n                    placeholder='Введите сообщение'\r\n                    validate={[requiredField, maxLength10]} />\r\n                <button type='submit'>\r\n                    Отправить\r\n                </button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst AddPostFormReduxForm = reduxForm({form: 'addPost'})(AddPostForm)\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPostActionCreator} from '../../../redux/profileReducer';\r\nimport MyPosts from './MyPost';\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.pageProfile.postsDt,\r\n        newPostText: state.pageProfile.newPostText\r\n    }\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (text) => {\r\n            dispatch(addPostActionCreator(text));\r\n        }\r\n    }\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MyPostsContainer from './MyPosts/MyPostContainer';\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo \r\n                isOwner={props.isOwner}\r\n                profile={props.userProfile} \r\n                status={props.status} \r\n                updateStatus={props.updateStatus}\r\n                savePhoto={props.savePhoto}\r\n                saveProfile={props.saveProfile} />\r\n            <MyPostsContainer />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport { Navigate, useParams } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport Profile from './Profile';\r\nimport { getUserProfile, getUserStatus, updateUserStatus, savePhoto, saveProfile } from '../../redux/profileReducer';\r\n\r\nexport function withRouter(Children) {\r\n    return(props) => {\r\n        const match = { params: useParams() };\r\n        return <Children {...props} match={match} />\r\n    }\r\n}\r\n\r\nclass ProfileContainer extends React.Component {\r\n    reloadProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) return <Navigate to='/auth' />    \r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getUserStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.reloadProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n            this.reloadProfile();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Profile \r\n                    { ...this.props } \r\n                    isOwner={!this.props.match.params.userId}\r\n                    userProfile={this.props.userProfile} \r\n                    status={this.props.status} \r\n                    updateStatus={this.props.updateUserStatus}\r\n                    savePhoto={this.props.savePhoto}\r\n                    saveProfile={this.props.saveProfile} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        userProfile: state.pageProfile.userProfile,\r\n        status: state.pageProfile.status,\r\n        authorizedUserId: state.auth.userId,\r\n        isAuthorized: state.auth.isAuthorized\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { getUserProfile, getUserStatus, updateUserStatus, savePhoto, saveProfile }),\r\n    withRouter\r\n)(ProfileContainer);"],"names":["_ref","contactTitle","contactValue","_jsxs","children","props","editMode","setEditMode","useState","status","setStatus","useEffect","_jsx","className","classes","onDoubleClick","onEditMode","autoFocus","onBlur","offEditMode","updateStatus","onChange","e","currentTarget","value","profile","isOwner","savePhoto","info_page","avatar","src","photos","large","noPhoto","alt","user_photo","type","target","files","length","data","line_one","fio","fullName","ProfileStatusWithHooks","onClick","info","aboutMe","lookingForAJob","lookingForAJobDescription","separate","Object","keys","contacts","map","key","index","MyContact","reduxForm","form","handleSubmit","error","onSubmit","createField","Input","Textarea","contact","saveProfile","Preloader","MyDataForm","initialValues","async","formData","then","MyData","image","message","likes","MyPosts","React","postsEls","posts","msg","Post","id","AddPostFormReduxForm","values","addPost","newPostText","maxLength10","maxLengthCreator","Field","component","name","placeholder","validate","requiredField","connect","state","pageProfile","postsDt","dispatch","text","addPostActionCreator","ProfileInfo","userProfile","MyPostsContainer","withRouter","Children","match","params","useParams","ProfileContainer","reloadProfile","userId","this","authorizedUserId","Navigate","to","getUserProfile","getUserStatus","componentDidMount","componentDidUpdate","prevProps","prevState","snapshot","render","Profile","updateUserStatus","compose","auth","isAuthorized"],"sourceRoot":""}