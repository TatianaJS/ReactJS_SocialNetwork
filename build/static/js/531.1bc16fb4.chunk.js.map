{"version":3,"file":"static/js/531.1bc16fb4.chunk.js","mappings":"iLACA,SAAgB,UAAY,6BAA6B,SAAW,4BAA4B,KAAO,yBCAvG,EAA2B,+B,uBCG3B,MAWA,EAXsBA,IAEdC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAiBC,UAC7BC,EAAAA,EAAAA,MAACC,EAAAA,GAAO,CAACC,GAAI,aAAeP,EAAMQ,GAAGJ,SAAA,EACjCH,EAAAA,EAAAA,KAAA,OAAKQ,IAAKT,EAAMU,MAAOC,IAAI,KAC1BX,EAAMY,UCRvB,EAAuB,sBCUvB,EARiBZ,IAETC,EAAAA,EAAAA,KAAA,OAAKC,UAAS,GAAAW,OAAKV,EAAY,SAAAU,OAAQb,EAAMc,UAAWV,SACnDJ,EAAMe,U,wBCEnB,MAwBMC,GAAcC,EAAAA,EAAAA,GAAiB,IAqB/BC,GAAsBC,EAAAA,EAAAA,GAAU,CAACC,KAAM,cAAjBD,EAnBJnB,IAEhBC,EAAAA,EAAAA,KAAA,OAAAG,UACIC,EAAAA,EAAAA,MAAA,QACIH,UAAWC,EAAQiB,KACnBC,SAAWrB,EAAMsB,aAAclB,SAAA,EAC/BH,EAAAA,EAAAA,KAACsB,EAAAA,EAAK,CACFC,UAAWC,EAAAA,GACXb,KAAK,aACLc,YAAY,oGACZC,SAAU,CAACC,EAAAA,EAAeZ,MAC9Bf,EAAAA,EAAAA,KAAA,UAAQ4B,KAAK,SAAQzB,SAAC,kEAUtC,EA/CmBJ,IACf,IAAI8B,EAAQ9B,EAAM+B,cAEdC,EAAeF,EAAMG,YAAYC,KAAIC,IAAQlC,EAAAA,EAAAA,KAACmC,EAAY,CAACxB,KAAMuB,EAAKvB,KAAMJ,GAAI2B,EAAK3B,GAAkBE,MAAOyB,EAAKzB,OAArByB,EAAK3B,MAEnG6B,EAAcP,EAAMQ,WAAWJ,KAAIK,IAAOtC,EAAAA,EAAAA,KAACuC,EAAO,CAACzB,QAASwB,EAAIxB,QAASD,SAAUyB,EAAIE,QAAaF,EAAI/B,MAM5G,OACIH,EAAAA,EAAAA,MAAA,OAAKH,UAAWC,EAAQuC,UAAUtC,SAAA,EAC9BH,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAQwC,gBAAgBvC,SACnC4B,KAEL3B,EAAAA,EAAAA,MAAA,OAAKH,UAAWC,EAAQyC,SAASxC,SAAA,CAC5BiC,GACDpC,EAAAA,EAAAA,KAACiB,EAAmB,CAACG,SAXhBwB,IACb7C,EAAM8C,OAAOD,EAAOE,WAAW,SAYzB,E,wBCPd,SAAeC,EAAAA,EAAAA,KACXC,EAAAA,EAAAA,KAfmBnB,IACZ,CACHC,cAAeD,EAAMC,kBAIHmB,IACf,CACHJ,OAASC,IACLG,GAASC,EAAAA,EAAAA,GAAcJ,GAAY,MAO3CK,EAAAA,EAFJ,CAGEC,E","sources":["webpack://my-app/./src/css/Dialogues/Dialogues.module.css?302e","webpack://my-app/./src/css/Dialogues/DialogueItem/DialogueItem.module.css?60e0","components/Dialogues/DialogueItem/DialogueItem.jsx","webpack://my-app/./src/css/Dialogues/Message/Message.module.css?7c1f","components/Dialogues/Message/Message.jsx","components/Dialogues/Dialogues.jsx","components/Dialogues/DialoguesContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogues\":\"Dialogues_dialogues__ErsJz\",\"messages\":\"Dialogues_messages__9pzim\",\"form\":\"Dialogues_form__pV4EH\"};","// extracted by mini-css-extract-plugin\nexport default {\"dialogue\":\"DialogueItem_dialogue__nhgmw\",\"active\":\"DialogueItem_active__xtIPH\"};","import React from 'react';\r\nimport classes from '../../../css/Dialogues/DialogueItem/DialogueItem.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst DialogueItem = (props) => {\r\n    return (\r\n        <div className={classes.dialogue}>\r\n            <NavLink to={'/messages/' + props.id}>\r\n                <img src={props.image} alt='' />\r\n                {props.name}\r\n            </NavLink>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DialogueItem;","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Message_item__xe6NW\"};","import React from 'react';\r\nimport classes from '../../../css/Dialogues/Message/Message.module.css';\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={`${classes.item} msg_${props.sendFrom}`}>\r\n            {props.message}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport classes from '../../css/Dialogues/Dialogues.module.css';\r\nimport DialogueItem from '../Dialogues/DialogueItem/DialogueItem';\r\nimport Message from '../Dialogues/Message/Message';\r\nimport { Textarea } from '../../utils/FormControls/FormControls';\r\nimport { requiredField, maxLengthCreator } from '../../utils/Validators/Validators';\r\n\r\nconst Dialogues = (props) => {\r\n    let state = props.pageDialogues;\r\n\r\n    let dialoguesEls = state.dialoguesDt.map(chat => <DialogueItem name={chat.name} id={chat.id} key={chat.id} image={chat.image} />);\r\n\r\n    let messagesEls = state.messagesDt.map(msg => <Message message={msg.message} sendFrom={msg.sender} key={msg.id} />);\r\n\r\n    let addMsgNew = (values) => {\r\n        props.addMsg(values.newMessage);\r\n    }\r\n    \r\n    return (\r\n        <div className={classes.dialogues}>\r\n            <div className={classes.dialogues_items}>\r\n                {dialoguesEls}\r\n            </div>\r\n            <div className={classes.messages}>\r\n                {messagesEls}\r\n                <AddMessageReduxForm onSubmit={addMsgNew} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <div>\r\n            <form \r\n                className={classes.form}\r\n                onSubmit={ props.handleSubmit }>\r\n                <Field \r\n                    component={Textarea}\r\n                    name='newMessage'\r\n                    placeholder='Введите сообщение'\r\n                    validate={[requiredField, maxLength50]} />\r\n                <button type='submit'>\r\n                    Отправить\r\n                </button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst AddMessageReduxForm = reduxForm({form: 'addMessage'})(AddMessageForm)\r\n\r\nexport default Dialogues;","import React from 'react';\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport Dialogues from './Dialogues';\r\nimport { addMsgCreator } from '../../redux/dialoguesReducer';\r\nimport { withAuthRedirect } from '../../hoc/AuthRedirect';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        pageDialogues: state.pageDialogues\r\n    }\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addMsg: (newMessage) => {\r\n            dispatch(addMsgCreator(newMessage));\r\n        }\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogues);"],"names":["props","_jsx","className","classes","children","_jsxs","NavLink","to","id","src","image","alt","name","concat","sendFrom","message","maxLength50","maxLengthCreator","AddMessageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","requiredField","type","state","pageDialogues","dialoguesEls","dialoguesDt","map","chat","DialogueItem","messagesEls","messagesDt","msg","Message","sender","dialogues","dialogues_items","messages","values","addMsg","newMessage","compose","connect","dispatch","addMsgCreator","withAuthRedirect","Dialogues"],"sourceRoot":""}