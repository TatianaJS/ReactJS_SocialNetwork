{"ast":null,"code":"import{stopSubmit}from'redux-form';import{authAPI,securityAPI}from'../api/api';import axios from'axios';const SET_AUTH_USER_DATA='SET_AUTH_USER_DATA';const GET_CAPTCHA_URL_SUCCESS='GET_CAPTCHA_URL_SUCCESS';let initialState={userId:null,email:null,login:null,isAuthorized:false,captchaUrl:null};const authReducer=function(){let state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;let action=arguments.length>1?arguments[1]:undefined;switch(action.type){case SET_AUTH_USER_DATA:case GET_CAPTCHA_URL_SUCCESS:return{...state,...action.payload};default:return state;}};//dispatch\nexport const setAuthUserData=(userId,email,login,isAuthorized)=>({type:SET_AUTH_USER_DATA,payload:{userId,email,login,isAuthorized}});export const getCaptchaURLSuccess=captchaUrl=>({type:GET_CAPTCHA_URL_SUCCESS,payload:{captchaUrl}});//thunk\nexport const getAuthUserData=()=>async dispatch=>{let response=await authAPI.auth();if(response.data.resultCode===0){let{id,login,email}=response.data.data;dispatch(setAuthUserData(id,login,email,true));}};export const Authorization=(email,password,rememberMe,captcha)=>async dispatch=>{let response=await authAPI.singIn(email,password,rememberMe,captcha);if(response.data.resultCode===0){dispatch(getAuthUserData());}else{if(response.data.resultCode===10){dispatch(getCaptchaURL());}let message=response.data.messages.length>0?response.data.messages[0]:'Error!';dispatch(stopSubmit('signIn',{_error:message}));}};export const getCaptchaURL=()=>async dispatch=>{let response=await securityAPI.getCaptchaURL();const captchaUrl=response.data.url;dispatch(getCaptchaURLSuccess(captchaUrl));};export const logingOut=()=>async dispatch=>{let response=await authAPI.singOut();if(response.data.resultCode===0){dispatch(setAuthUserData(null,null,null,false,null));}};export default authReducer;","map":{"version":3,"names":["stopSubmit","authAPI","securityAPI","axios","SET_AUTH_USER_DATA","GET_CAPTCHA_URL_SUCCESS","initialState","userId","email","login","isAuthorized","captchaUrl","authReducer","state","arguments","length","undefined","action","type","payload","setAuthUserData","getCaptchaURLSuccess","getAuthUserData","dispatch","response","auth","data","resultCode","id","Authorization","password","rememberMe","captcha","singIn","getCaptchaURL","message","messages","_error","url","logingOut","singOut"],"sources":["C:/Work/React/studying/my-app/src/redux/authReducer.js"],"sourcesContent":["import { stopSubmit } from 'redux-form';\r\nimport { authAPI, securityAPI } from '../api/api';\r\nimport axios from 'axios';\r\n\r\nconst SET_AUTH_USER_DATA = 'SET_AUTH_USER_DATA';\r\nconst GET_CAPTCHA_URL_SUCCESS = 'GET_CAPTCHA_URL_SUCCESS';\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuthorized: false,\r\n    captchaUrl: null\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case SET_AUTH_USER_DATA:\r\n        case GET_CAPTCHA_URL_SUCCESS:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n//dispatch\r\nexport const setAuthUserData = (userId, email, login, isAuthorized) => ({\r\n    type: SET_AUTH_USER_DATA, \r\n    payload: {userId, email, login, isAuthorized}\r\n});\r\n\r\nexport const getCaptchaURLSuccess = (captchaUrl) => ({\r\n    type: GET_CAPTCHA_URL_SUCCESS, \r\n    payload: {captchaUrl}\r\n});\r\n\r\n//thunk\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let response = await authAPI.auth();\r\n    if (response.data.resultCode === 0) {\r\n        let {id, login, email} = response.data.data;\r\n        dispatch(setAuthUserData(id, login, email, true));\r\n    }\r\n}\r\n\r\nexport const Authorization = (email, password, rememberMe, captcha) => async (dispatch) => {\r\n    let response = await authAPI.singIn(email, password, rememberMe, captcha);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData());\r\n    } else {\r\n        if(response.data.resultCode === 10) {\r\n            dispatch(getCaptchaURL());\r\n        }\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : 'Error!';\r\n        dispatch(stopSubmit('signIn', {\r\n            _error: message\r\n        }));\r\n    }\r\n}\r\n\r\nexport const getCaptchaURL = () => async (dispatch) => {\r\n    let response = await securityAPI.getCaptchaURL();\r\n    const captchaUrl = response.data.url;\r\n    dispatch(getCaptchaURLSuccess(captchaUrl));\r\n}\r\n\r\nexport const logingOut = () => async (dispatch) => {\r\n    let response = await authAPI.singOut();\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false, null));\r\n    }\r\n}\r\n\r\nexport default authReducer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}