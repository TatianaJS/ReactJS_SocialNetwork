{"ast":null,"code":"var _jsxFileName = \"C:\\\\Work\\\\React\\\\studying\\\\my-app\\\\src\\\\components\\\\Users\\\\UsersContainer.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { follow, setCurrentPage, setUsers, unfollow, setTotalUsersCount, setIsFetching, toggleFollowingProgress, getUsersThunkCreator } from '../../redux/usersReducer';\nimport Users from './Users';\nimport Preloader from '../Preloader/Preloader';\nimport { usersAPI } from '../../api/api';\nclass UsersContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.onPageChanged = pageNumber => {\n      this.props.getUsers(pageNumber);\n      this.props.setCurrentPage(pageNumber);\n      this.props.setIsFetching(true);\n      usersAPI.getUsers(pageNumber, this.props.pageSize).then(data => {\n        this.props.setIsFetching(false);\n        this.props.setUsers(data.items);\n      });\n    };\n  }\n  componentDidMount() {\n    this.props.getUsers(this.props.currentPage, this.props.pageSize);\n\n    /*this.props.setIsFetching(true);\r\n      usersAPI.getUsers(this.props.currentPage, this.props.pageSize).then(data => {\r\n        this.props.setIsFetching(false);\r\n        this.props.setUsers(data.items);\r\n        this.props.setTotalUsersCount(data.totalCount);\r\n    });*/\n  }\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, this.props.isFetching ? /*#__PURE__*/React.createElement(Preloader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 39\n      }\n    }) : null, /*#__PURE__*/React.createElement(Users, {\n      totalUsersCount: this.props.totalUsersCount,\n      pageSize: this.props.pageSize,\n      currentPage: this.props.currentPage,\n      onPageChanged: this.onPageChanged,\n      users: this.props.users,\n      follow: this.props.follow,\n      unfollow: this.props.unfollow,\n      toggleFollowingProgress: this.props.toggleFollowingProgress,\n      followingInProgress: this.props.followingInProgress,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }\n    }));\n  }\n}\nlet mapStateToProps = state => {\n  return {\n    users: state.usersPage.users,\n    pageSize: state.usersPage.pageSize,\n    totalUsersCount: state.usersPage.totalUsersCount,\n    currentPage: state.usersPage.currentPage,\n    isFetching: state.usersPage.isFetching,\n    followingInProgress: state.usersPage.followingInProgress\n  };\n};\nexport default connect(mapStateToProps, {\n  follow,\n  unfollow,\n  setUsers,\n  setCurrentPage,\n  setTotalUsersCount,\n  setIsFetching,\n  toggleFollowingProgress,\n  getUsersThunkCreator\n})(UsersContainer);","map":{"version":3,"names":["React","connect","follow","setCurrentPage","setUsers","unfollow","setTotalUsersCount","setIsFetching","toggleFollowingProgress","getUsersThunkCreator","Users","Preloader","usersAPI","UsersContainer","Component","constructor","args","onPageChanged","pageNumber","props","getUsers","pageSize","then","data","items","componentDidMount","currentPage","render","createElement","Fragment","isFetching","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","totalUsersCount","users","followingInProgress","mapStateToProps","state","usersPage"],"sources":["C:/Work/React/studying/my-app/src/components/Users/UsersContainer.jsx"],"sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { follow, setCurrentPage, setUsers, unfollow, setTotalUsersCount, setIsFetching, toggleFollowingProgress, getUsersThunkCreator } from '../../redux/usersReducer';\r\nimport Users from './Users';\r\nimport Preloader from '../Preloader/Preloader';\r\nimport { usersAPI } from '../../api/api';\r\n\r\nclass UsersContainer extends React.Component {\r\n    componentDidMount() {\r\n\r\n        this.props.getUsers(this.props.currentPage, this.props.pageSize);\r\n        \r\n        /*this.props.setIsFetching(true);\r\n\r\n        usersAPI.getUsers(this.props.currentPage, this.props.pageSize).then(data => {\r\n            this.props.setIsFetching(false);\r\n            this.props.setUsers(data.items);\r\n            this.props.setTotalUsersCount(data.totalCount);\r\n        });*/\r\n    }\r\n    onPageChanged = (pageNumber) => {\r\n        this.props.getUsers(pageNumber);\r\n        this.props.setCurrentPage(pageNumber);\r\n        this.props.setIsFetching(true);\r\n\r\n        usersAPI.getUsers(pageNumber, this.props.pageSize).then(data => {\r\n            this.props.setIsFetching(false);\r\n            this.props.setUsers(data.items);\r\n        });\r\n    }\r\n\r\n    render() { \r\n        return <>\r\n            { this.props.isFetching ? <Preloader /> : null }\r\n            <Users \r\n                totalUsersCount={this.props.totalUsersCount}\r\n                pageSize={this.props.pageSize}\r\n                currentPage={this.props.currentPage}\r\n                onPageChanged={this.onPageChanged}\r\n                users={this.props.users}\r\n                follow={this.props.follow}\r\n                unfollow={this.props.unfollow}\r\n                toggleFollowingProgress={this.props.toggleFollowingProgress}\r\n                followingInProgress={this.props.followingInProgress} />\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n        followingInProgress: state.usersPage.followingInProgress\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, {follow, unfollow, setUsers, setCurrentPage, setTotalUsersCount, setIsFetching, toggleFollowingProgress, getUsersThunkCreator })(UsersContainer);"],"mappings":"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"},"metadata":{},"sourceType":"module"}