{"ast":null,"code":"var _jsxFileName = \"C:\\\\Work\\\\React\\\\studying\\\\my-app\\\\src\\\\components\\\\Profile\\\\ProfileContainer.jsx\";\nimport React from 'react';\nimport { Navigate, useParams } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport Profile from './Profile';\nimport { getUserProfile, getUserStatus, updateUserStatus, savePhoto, saveProfile } from '../../redux/profileReducer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function withRouter(Children) {\n  var _s = $RefreshSig$();\n  return _s(props => {\n    _s();\n    const match = {\n      params: useParams()\n    };\n    return /*#__PURE__*/_jsxDEV(Children, {\n      ...props,\n      match: match\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 16\n    }, this);\n  }, \"zmUErVVHtqqM6DIDQ9M8H17P2nM=\", false, function () {\n    return [useParams];\n  });\n}\nclass ProfileContainer extends React.Component {\n  reloadProfile() {\n    let userId = this.props.match.params.userId;\n    if (!userId) {\n      userId = this.props.authorizedUserId;\n      if (!userId) return /*#__PURE__*/_jsxDEV(Navigate, {\n        to: \"/auth\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 33\n      }, this);\n    }\n    this.props.getUserProfile(userId);\n    this.props.getUserStatus(userId);\n  }\n  componentDidMount() {\n    this.reloadProfile();\n  }\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (this.props.match.params.userId !== prevProps.match.params.userId) {\n      this.reloadProfile();\n    }\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Profile, {\n        ...this.props,\n        isOwner: !this.props.match.params.userId,\n        userProfile: this.props.userProfile,\n        status: this.props.status,\n        updateStatus: this.props.updateUserStatus,\n        savePhoto: this.props.savePhoto,\n        saveProfile: this.props.saveProfile\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this);\n  }\n}\nlet mapStateToProps = state => {\n  return {\n    userProfile: state.pageProfile.userProfile,\n    status: state.pageProfile.status,\n    authorizedUserId: state.auth.userId,\n    isAuthorized: state.auth.isAuthorized,\n    saveProfile: state\n  };\n};\nexport default compose(connect(mapStateToProps, {\n  getUserProfile,\n  getUserStatus,\n  updateUserStatus,\n  savePhoto,\n  saveProfile\n}), withRouter)(ProfileContainer);","map":{"version":3,"names":["React","Navigate","useParams","connect","compose","Profile","getUserProfile","getUserStatus","updateUserStatus","savePhoto","saveProfile","jsxDEV","_jsxDEV","withRouter","Children","_s","$RefreshSig$","props","match","params","fileName","_jsxFileName","lineNumber","columnNumber","ProfileContainer","Component","reloadProfile","userId","authorizedUserId","to","componentDidMount","componentDidUpdate","prevProps","prevState","snapshot","render","children","isOwner","userProfile","status","updateStatus","mapStateToProps","state","pageProfile","auth","isAuthorized"],"sources":["C:/Work/React/studying/my-app/src/components/Profile/ProfileContainer.jsx"],"sourcesContent":["import React from 'react';\r\nimport { Navigate, useParams } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport Profile from './Profile';\r\nimport { getUserProfile, getUserStatus, updateUserStatus, savePhoto, saveProfile } from '../../redux/profileReducer';\r\n\r\nexport function withRouter(Children) {\r\n    return(props) => {\r\n        const match = { params: useParams() };\r\n        return <Children {...props} match={match} />\r\n    }\r\n}\r\n\r\nclass ProfileContainer extends React.Component {\r\n    reloadProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) return <Navigate to='/auth' />    \r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getUserStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.reloadProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n            this.reloadProfile();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Profile \r\n                    { ...this.props } \r\n                    isOwner={!this.props.match.params.userId}\r\n                    userProfile={this.props.userProfile} \r\n                    status={this.props.status} \r\n                    updateStatus={this.props.updateUserStatus}\r\n                    savePhoto={this.props.savePhoto}\r\n                    saveProfile={this.props.saveProfile} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        userProfile: state.pageProfile.userProfile,\r\n        status: state.pageProfile.status,\r\n        authorizedUserId: state.auth.userId,\r\n        isAuthorized: state.auth.isAuthorized,\r\n        saveProfile: state\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { getUserProfile, getUserStatus, updateUserStatus, savePhoto, saveProfile }),\r\n    withRouter\r\n)(ProfileContainer);"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}