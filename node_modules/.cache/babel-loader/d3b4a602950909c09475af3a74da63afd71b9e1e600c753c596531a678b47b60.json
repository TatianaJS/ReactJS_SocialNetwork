{"ast":null,"code":"import { stopSubmit } from 'redux-form';\nimport { authAPI } from '../api/api';\nconst SET_AUTH_USER_DATA = 'SET_AUTH_USER_DATA';\nlet initialState = {\n  userId: null,\n  email: null,\n  login: null,\n  isAuthorized: false\n};\nconst authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_AUTH_USER_DATA:\n      return {\n        ...state,\n        ...action.payload\n      };\n    default:\n      return state;\n  }\n};\n\n//dispatch\nexport const setAuthUserData = (userId, email, login, isAuthorized) => ({\n  type: SET_AUTH_USER_DATA,\n  payload: {\n    userId,\n    email,\n    login,\n    isAuthorized\n  }\n});\n\n//thunk\nexport const getAuthUserData = () => {\n  return dispatch => {\n    authAPI.auth().then(response => {\n      if (response.data.resultCode === 0) {\n        let {\n          id,\n          login,\n          email\n        } = response.data.data;\n        dispatch(setAuthUserData(id, login, email, true));\n      }\n    });\n  };\n};\nexport const Authorization = (email, password, rememberMe) => {\n  return dispatch => {\n    authAPI.singIn(email, password, rememberMe).then(response => {\n      if (response.data.resultCode === 0) {\n        dispatch(getAuthUserData());\n      } else {\n        let action = stopSubmit('signIn', {\n          email: ''\n        });\n        dispatch(action);\n      }\n    });\n  };\n};\n_c = Authorization;\nexport const logingOut = () => {\n  return dispatch => {\n    authAPI.singOut().then(response => {\n      if (response.data.resultCode === 0) {\n        dispatch(setAuthUserData(null, null, null, false));\n      }\n    });\n  };\n};\nexport default authReducer;\nvar _c;\n$RefreshReg$(_c, \"Authorization\");","map":{"version":3,"names":["stopSubmit","authAPI","SET_AUTH_USER_DATA","initialState","userId","email","login","isAuthorized","authReducer","state","action","type","payload","setAuthUserData","getAuthUserData","dispatch","auth","then","response","data","resultCode","id","Authorization","password","rememberMe","singIn","_c","logingOut","singOut","$RefreshReg$"],"sources":["C:/Work/React/studying/my-app/src/redux/authReducer.js"],"sourcesContent":["import { stopSubmit } from 'redux-form';\r\nimport { authAPI } from '../api/api';\r\n\r\nconst SET_AUTH_USER_DATA = 'SET_AUTH_USER_DATA';\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuthorized: false\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case SET_AUTH_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n//dispatch\r\nexport const setAuthUserData = (userId, email, login, isAuthorized) => ({\r\n    type: SET_AUTH_USER_DATA, \r\n    payload: {userId, email, login, isAuthorized}\r\n});\r\n\r\n//thunk\r\nexport const getAuthUserData = () => {\r\n    return (dispatch) => {\r\n        authAPI.auth()\r\n            .then(response => {\r\n                if (response.data.resultCode === 0) {\r\n                    let {id, login, email} = response.data.data;\r\n                    dispatch(setAuthUserData(id, login, email, true));\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nexport const Authorization = (email, password, rememberMe) => {\r\n    return (dispatch) => {\r\n        authAPI.singIn(email, password, rememberMe)\r\n            .then(response => {\r\n                if (response.data.resultCode === 0) {\r\n                    dispatch(getAuthUserData());\r\n                } else {\r\n                    let action = stopSubmit('signIn', {email: ''});\r\n                    dispatch(action);\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nexport const logingOut = () => {\r\n    return (dispatch) => {\r\n        authAPI.singOut()\r\n            .then(response => {\r\n                if (response.data.resultCode === 0) {\r\n                    dispatch(setAuthUserData(null, null, null, false));\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nexport default authReducer;"],"mappings":"AAAA,SAASA,UAAU,QAAQ,YAAY;AACvC,SAASC,OAAO,QAAQ,YAAY;AAEpC,MAAMC,kBAAkB,GAAG,oBAAoB;AAE/C,IAAIC,YAAY,GAAG;EACfC,MAAM,EAAE,IAAI;EACZC,KAAK,EAAE,IAAI;EACXC,KAAK,EAAE,IAAI;EACXC,YAAY,EAAE;AAClB,CAAC;AAED,MAAMC,WAAW,GAAGA,CAACC,KAAK,GAAGN,YAAY,EAAEO,MAAM,KAAK;EAClD,QAAOA,MAAM,CAACC,IAAI;IACd,KAAKT,kBAAkB;MACnB,OAAO;QACH,GAAGO,KAAK;QACR,GAAGC,MAAM,CAACE;MACd,CAAC;IACL;MACI,OAAOH,KAAK;EACpB;AACJ,CAAC;;AAED;AACA,OAAO,MAAMI,eAAe,GAAGA,CAACT,MAAM,EAAEC,KAAK,EAAEC,KAAK,EAAEC,YAAY,MAAM;EACpEI,IAAI,EAAET,kBAAkB;EACxBU,OAAO,EAAE;IAACR,MAAM;IAAEC,KAAK;IAAEC,KAAK;IAAEC;EAAY;AAChD,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMO,eAAe,GAAGA,CAAA,KAAM;EACjC,OAAQC,QAAQ,IAAK;IACjBd,OAAO,CAACe,IAAI,CAAC,CAAC,CACTC,IAAI,CAACC,QAAQ,IAAI;MACd,IAAIA,QAAQ,CAACC,IAAI,CAACC,UAAU,KAAK,CAAC,EAAE;QAChC,IAAI;UAACC,EAAE;UAAEf,KAAK;UAAED;QAAK,CAAC,GAAGa,QAAQ,CAACC,IAAI,CAACA,IAAI;QAC3CJ,QAAQ,CAACF,eAAe,CAACQ,EAAE,EAAEf,KAAK,EAAED,KAAK,EAAE,IAAI,CAAC,CAAC;MACrD;IACJ,CAAC,CAAC;EACV,CAAC;AACL,CAAC;AAED,OAAO,MAAMiB,aAAa,GAAGA,CAACjB,KAAK,EAAEkB,QAAQ,EAAEC,UAAU,KAAK;EAC1D,OAAQT,QAAQ,IAAK;IACjBd,OAAO,CAACwB,MAAM,CAACpB,KAAK,EAAEkB,QAAQ,EAAEC,UAAU,CAAC,CACtCP,IAAI,CAACC,QAAQ,IAAI;MACd,IAAIA,QAAQ,CAACC,IAAI,CAACC,UAAU,KAAK,CAAC,EAAE;QAChCL,QAAQ,CAACD,eAAe,CAAC,CAAC,CAAC;MAC/B,CAAC,MAAM;QACH,IAAIJ,MAAM,GAAGV,UAAU,CAAC,QAAQ,EAAE;UAACK,KAAK,EAAE;QAAE,CAAC,CAAC;QAC9CU,QAAQ,CAACL,MAAM,CAAC;MACpB;IACJ,CAAC,CAAC;EACV,CAAC;AACL,CAAC;AAAAgB,EAAA,GAZYJ,aAAa;AAc1B,OAAO,MAAMK,SAAS,GAAGA,CAAA,KAAM;EAC3B,OAAQZ,QAAQ,IAAK;IACjBd,OAAO,CAAC2B,OAAO,CAAC,CAAC,CACZX,IAAI,CAACC,QAAQ,IAAI;MACd,IAAIA,QAAQ,CAACC,IAAI,CAACC,UAAU,KAAK,CAAC,EAAE;QAChCL,QAAQ,CAACF,eAAe,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;MACtD;IACJ,CAAC,CAAC;EACV,CAAC;AACL,CAAC;AAED,eAAeL,WAAW;AAAC,IAAAkB,EAAA;AAAAG,YAAA,CAAAH,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}