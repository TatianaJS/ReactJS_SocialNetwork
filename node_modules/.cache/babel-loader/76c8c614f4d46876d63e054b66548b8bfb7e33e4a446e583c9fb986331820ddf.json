{"ast":null,"code":"var _jsxFileName = \"C:\\\\Work\\\\React\\\\studying\\\\my-app\\\\src\\\\components\\\\Profile\\\\MyPosts\\\\MyPost.jsx\";\nimport React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport Post from '../MyPosts/Post';\nimport classes from '../../../css/Profile/MyPosts/MyPost.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyPosts = props => {\n  let postsEls = props.posts.map(msg => /*#__PURE__*/_jsxDEV(Post, {\n    message: msg.message,\n    likes: msg.likes\n  }, msg.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 43\n  }, this));\n  let newPostEl = /*#__PURE__*/React.createRef();\n  let onAddPost = () => {\n    props.addPost();\n  };\n  let onPostChange = () => {\n    let text = newPostEl.current.value;\n    props.updateNewPostText(text);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.entries,\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"My posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          onChange: onPostChange,\n          ref: newPostEl,\n          value: props.newPostText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: onAddPost,\n          children: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), postsEls]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n_c = MyPosts;\nconst AddPostForm = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: classes.form,\n      onSubmit: props.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Field, {\n        component: \"textarea\",\n        name: \"newMessage\",\n        placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0441\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u0435\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n_c2 = AddPostForm;\nconst AddPostFormReduxForm = reduxForm({\n  form: 'addMessage'\n})(AddPostForm);\nexport default MyPosts;\nvar _c, _c2;\n$RefreshReg$(_c, \"MyPosts\");\n$RefreshReg$(_c2, \"AddPostForm\");","map":{"version":3,"names":["React","Field","reduxForm","Post","classes","jsxDEV","_jsxDEV","MyPosts","props","postsEls","posts","map","msg","message","likes","id","fileName","_jsxFileName","lineNumber","columnNumber","newPostEl","createRef","onAddPost","addPost","onPostChange","text","current","value","updateNewPostText","className","entries","children","onChange","ref","newPostText","type","onClick","_c","AddPostForm","form","onSubmit","handleSubmit","component","name","placeholder","_c2","AddPostFormReduxForm","$RefreshReg$"],"sources":["C:/Work/React/studying/my-app/src/components/Profile/MyPosts/MyPost.jsx"],"sourcesContent":["import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport Post from '../MyPosts/Post';\r\nimport classes from '../../../css/Profile/MyPosts/MyPost.module.css';\r\n\r\nconst MyPosts = (props) => {\r\n    let postsEls = props.posts.map(msg => <Post message={msg.message} likes={msg.likes} key={msg.id} />);\r\n\r\n    let newPostEl = React.createRef();\r\n\r\n    let onAddPost = () => {\r\n        props.addPost();\r\n    };\r\n\r\n    let onPostChange = () => {\r\n        let text = newPostEl.current.value;\r\n        props.updateNewPostText(text);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.entries}>\r\n            <p>My posts</p>\r\n            <div>\r\n                <form>\r\n                    <textarea onChange={onPostChange} ref={newPostEl} value={props.newPostText} />\r\n                    <button type='button' onClick={onAddPost}>\r\n                        Отправить\r\n                    </button>\r\n                </form>\r\n            </div>\r\n            {postsEls}\r\n        </div>\r\n    );\r\n}\r\n\r\nconst AddPostForm = (props) => {\r\n    return (\r\n        <div>\r\n            <form \r\n                className={classes.form}\r\n                onSubmit={ props.handleSubmit }>\r\n                <Field \r\n                    component='textarea'\r\n                    name='newMessage'\r\n                    placeholder='Введите сообщение' />\r\n                <button type='submit'>\r\n                    Отправить\r\n                </button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst AddPostFormReduxForm = reduxForm({form: 'addMessage'})(AddPostForm)\r\n\r\nexport default MyPosts;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}