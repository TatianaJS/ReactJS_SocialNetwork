{"ast":null,"code":"var _jsxFileName = \"C:\\\\Work\\\\React\\\\studying\\\\my-app\\\\src\\\\components\\\\Profile\\\\MyPosts\\\\MyPost.jsx\";\nimport React from 'react';\nimport Post from '../MyPosts/Post';\nimport classes from '../../../css/Profile/MyPosts/MyPost.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet addPostActionCreator = () => {\n  return {\n    type: 'ADD-POST'\n  };\n};\nlet rewritePostTextActionCreator = () => {\n  return {\n    type: 'REWRITE-POST-TEXT-POST'\n  };\n};\nconst MyPosts = props => {\n  let postsEls = props.posts.map(msg => /*#__PURE__*/_jsxDEV(Post, {\n    message: msg.message,\n    likes: msg.likes\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 43\n  }, this));\n  let newPostEl = /*#__PURE__*/React.createRef();\n  let addPost = () => {\n    props.dispatch(addPostActionCreator());\n  };\n  let onPostChange = () => {\n    let text = newPostEl.current.value,\n      action = {\n        type: 'REWRITE-POST-TEXT',\n        newTxt: text\n      };\n    props.dispatch(action);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.entries,\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"My posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          onChange: onPostChange,\n          ref: newPostEl,\n          value: props.newPostText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: addPost,\n          children: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), postsEls]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n_c = MyPosts;\nexport default MyPosts;\nvar _c;\n$RefreshReg$(_c, \"MyPosts\");","map":{"version":3,"names":["React","Post","classes","jsxDEV","_jsxDEV","addPostActionCreator","type","rewritePostTextActionCreator","MyPosts","props","postsEls","posts","map","msg","message","likes","fileName","_jsxFileName","lineNumber","columnNumber","newPostEl","createRef","addPost","dispatch","onPostChange","text","current","value","action","newTxt","className","entries","children","onChange","ref","newPostText","onClick","_c","$RefreshReg$"],"sources":["C:/Work/React/studying/my-app/src/components/Profile/MyPosts/MyPost.jsx"],"sourcesContent":["import React from 'react';\r\nimport Post from '../MyPosts/Post';\r\nimport classes from '../../../css/Profile/MyPosts/MyPost.module.css';\r\n\r\nlet addPostActionCreator = () => {\r\n    return {\r\n        type: 'ADD-POST'\r\n    };\r\n};\r\n\r\nlet rewritePostTextActionCreator = () => {\r\n    return {\r\n        type: 'REWRITE-POST-TEXT-POST'\r\n    };\r\n};\r\n\r\nconst MyPosts = (props) => {\r\n    let postsEls = props.posts.map(msg => <Post message={msg.message} likes={msg.likes} />);\r\n\r\n    let newPostEl = React.createRef();\r\n\r\n    let addPost = () => {\r\n        props.dispatch(addPostActionCreator());\r\n    };\r\n\r\n    let onPostChange = () => {\r\n        let text = newPostEl.current.value,\r\n            action = {type: 'REWRITE-POST-TEXT', newTxt: text};\r\n        props.dispatch(action);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.entries}>\r\n            <p>My posts</p>\r\n            <div>\r\n                <form>\r\n                    <textarea onChange={onPostChange} ref={newPostEl} value={props.newPostText} />\r\n                    <button type='button' onClick={addPost}>\r\n                        Отправить\r\n                    </button>\r\n                </form>\r\n            </div>\r\n            {postsEls}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MyPosts;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,iBAAiB;AAClC,OAAOC,OAAO,MAAM,gDAAgD;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErE,IAAIC,oBAAoB,GAAGA,CAAA,KAAM;EAC7B,OAAO;IACHC,IAAI,EAAE;EACV,CAAC;AACL,CAAC;AAED,IAAIC,4BAA4B,GAAGA,CAAA,KAAM;EACrC,OAAO;IACHD,IAAI,EAAE;EACV,CAAC;AACL,CAAC;AAED,MAAME,OAAO,GAAIC,KAAK,IAAK;EACvB,IAAIC,QAAQ,GAAGD,KAAK,CAACE,KAAK,CAACC,GAAG,CAACC,GAAG,iBAAIT,OAAA,CAACH,IAAI;IAACa,OAAO,EAAED,GAAG,CAACC,OAAQ;IAACC,KAAK,EAAEF,GAAG,CAACE;EAAM;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,CAAC;EAEvF,IAAIC,SAAS,gBAAGpB,KAAK,CAACqB,SAAS,CAAC,CAAC;EAEjC,IAAIC,OAAO,GAAGA,CAAA,KAAM;IAChBb,KAAK,CAACc,QAAQ,CAAClB,oBAAoB,CAAC,CAAC,CAAC;EAC1C,CAAC;EAED,IAAImB,YAAY,GAAGA,CAAA,KAAM;IACrB,IAAIC,IAAI,GAAGL,SAAS,CAACM,OAAO,CAACC,KAAK;MAC9BC,MAAM,GAAG;QAACtB,IAAI,EAAE,mBAAmB;QAAEuB,MAAM,EAAEJ;MAAI,CAAC;IACtDhB,KAAK,CAACc,QAAQ,CAACK,MAAM,CAAC;EAC1B,CAAC;EAED,oBACIxB,OAAA;IAAK0B,SAAS,EAAE5B,OAAO,CAAC6B,OAAQ;IAAAC,QAAA,gBAC5B5B,OAAA;MAAA4B,QAAA,EAAG;IAAQ;MAAAhB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACff,OAAA;MAAA4B,QAAA,eACI5B,OAAA;QAAA4B,QAAA,gBACI5B,OAAA;UAAU6B,QAAQ,EAAET,YAAa;UAACU,GAAG,EAAEd,SAAU;UAACO,KAAK,EAAElB,KAAK,CAAC0B;QAAY;UAAAnB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC9Ef,OAAA;UAAQE,IAAI,EAAC,QAAQ;UAAC8B,OAAO,EAAEd,OAAQ;UAAAU,QAAA,EAAC;QAExC;UAAAhB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,EACLT,QAAQ;EAAA;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEd,CAAC;AAAAkB,EAAA,GA7BK7B,OAAO;AA+Bb,eAAeA,OAAO;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}