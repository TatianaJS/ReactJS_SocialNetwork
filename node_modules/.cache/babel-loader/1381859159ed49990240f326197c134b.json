{"ast":null,"code":"import { addPostActionCreator, rewritePostTextActionCreator } from '../../../redux/profileReducer';\nimport MyPosts from './MyPost';\nimport { connect } from 'react-redux';\n\n/*const MyPostsContainer = (props) => {\r\n    let state = props.store.getState();\r\n\r\n    let addPost = () => {\r\n        props.store.dispatch(addPostActionCreator());\r\n    };\r\n\r\n    let onPostChange = (text) => {\r\n        let action = rewritePostTextActionCreator(text);\r\n        props.store.dispatch(rewritePostTextActionCreator(text));\r\n    };\r\n\r\n    return (\r\n        <MyPosts \r\n            updateNewPostText={onPostChange} \r\n            addPost={addPost} \r\n            posts={state.pageProfile.postsDt}\r\n            newPostText={state.pageProfile.newPostText} />\r\n    );\r\n}*/\n\nlet mapStateToProps = state => {\n  return {\n    posts: state.pageProfile.postsDt,\n    newPostText: state.pageProfile.newPostText\n  };\n};\nlet mapDispatchToProps = dispatch => {\n  return {\n    updateNewPostText: text => {\n      let action = rewritePostTextActionCreator(text);\n      dispatch(rewritePostTextActionCreator(text));\n    },\n    addPost: () => {\n      dispatch(addPostActionCreator());\n    }\n  };\n};\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\nexport default MyPostsContainer;","map":{"version":3,"names":["addPostActionCreator","rewritePostTextActionCreator","MyPosts","connect","mapStateToProps","state","posts","pageProfile","postsDt","newPostText","mapDispatchToProps","dispatch","updateNewPostText","text","action","addPost","MyPostsContainer"],"sources":["C:/Work/React/studying/my-app/src/components/Profile/MyPosts/MyPostContainer.jsx"],"sourcesContent":["import {addPostActionCreator, rewritePostTextActionCreator} from '../../../redux/profileReducer'\r\nimport MyPosts from './MyPost';\r\nimport { connect } from 'react-redux';\r\n\r\n/*const MyPostsContainer = (props) => {\r\n    let state = props.store.getState();\r\n\r\n    let addPost = () => {\r\n        props.store.dispatch(addPostActionCreator());\r\n    };\r\n\r\n    let onPostChange = (text) => {\r\n        let action = rewritePostTextActionCreator(text);\r\n        props.store.dispatch(rewritePostTextActionCreator(text));\r\n    };\r\n\r\n    return (\r\n        <MyPosts \r\n            updateNewPostText={onPostChange} \r\n            addPost={addPost} \r\n            posts={state.pageProfile.postsDt}\r\n            newPostText={state.pageProfile.newPostText} />\r\n    );\r\n}*/\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.pageProfile.postsDt,\r\n        newPostText: state.pageProfile.newPostText\r\n    }\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updateNewPostText: (text) => {\r\n            let action = rewritePostTextActionCreator(text);\r\n            dispatch(rewritePostTextActionCreator(text));\r\n        },\r\n        addPost: () => {\r\n            dispatch(addPostActionCreator());\r\n        }\r\n    }\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;"],"mappings":"AAAA,SAAQA,oBAAoB,EAAEC,4BAA4B,QAAO,+BAA+B;AAChG,OAAOC,OAAO,MAAM,UAAU;AAC9B,SAASC,OAAO,QAAQ,aAAa;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIC,eAAe,GAAIC,KAAK,IAAK;EAC7B,OAAO;IACHC,KAAK,EAAED,KAAK,CAACE,WAAW,CAACC,OAAO;IAChCC,WAAW,EAAEJ,KAAK,CAACE,WAAW,CAACE;EACnC,CAAC;AACL,CAAC;AAED,IAAIC,kBAAkB,GAAIC,QAAQ,IAAK;EACnC,OAAO;IACHC,iBAAiB,EAAGC,IAAI,IAAK;MACzB,IAAIC,MAAM,GAAGb,4BAA4B,CAACY,IAAI,CAAC;MAC/CF,QAAQ,CAACV,4BAA4B,CAACY,IAAI,CAAC,CAAC;IAChD,CAAC;IACDE,OAAO,EAAEA,CAAA,KAAM;MACXJ,QAAQ,CAACX,oBAAoB,CAAC,CAAC,CAAC;IACpC;EACJ,CAAC;AACL,CAAC;AAED,MAAMgB,gBAAgB,GAAGb,OAAO,CAACC,eAAe,EAAEM,kBAAkB,CAAC,CAACR,OAAO,CAAC;AAE9E,eAAec,gBAAgB"},"metadata":{},"sourceType":"module"}