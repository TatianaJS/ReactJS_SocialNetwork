{"ast":null,"code":"import{profileAPI}from'../api/api';const ADD_POST='ADD-POST';const SET_USER_PROFILE='SET_USER_PROFILE';const SET_STATUS='SET_STATUS';let initialState={postsDt:[{id:1,message:'Hi, how are u?',likes:12},{id:2,message:'Hi, everybody!',likes:36},{id:3,message:'OK. And u?',likes:26}],userProfile:null,status:''};const profileReducer=function(){let state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;let action=arguments.length>1?arguments[1]:undefined;switch(action.type){case ADD_POST:/*return {\r\n                ...state,\r\n                postsDt: [...state.postsDt, {\r\n                    id: state.postsDt.length + 1,\r\n                    message: action.newPost,\r\n                    likes: 0\r\n                }]\r\n            };*/let newPost={id:state.postsDt.length+1,message:action.newPostText,likes:0};return{...state,postsDt:[...state.postsDt,newPost],newPostText:''};case SET_USER_PROFILE:return{...state,userProfile:action.userProfile};case SET_STATUS:return{...state,status:action.status};default:return state;};};//dispatch\n//export const addPostActionCreator = (newPost) => ({type: ADD_POST, newPost});\nexport const addPostActionCreator=text=>({type:ADD_POST,newPostText:text});export const setUserProfile=userProfile=>({type:SET_USER_PROFILE,userProfile});export const setStatus=status=>({type:SET_STATUS,status});//thunk\nexport const getUserProfile=userId=>async dispatch=>{let response=await profileAPI.getProfile(userId);dispatch(setUserProfile(response.data));};export const getUserStatus=userId=>async dispatch=>{let response=await profileAPI.getStatus(userId);dispatch(setStatus(response.data));};export const updateUserStatus=status=>async dispatch=>{let response=await profileAPI.updateStatus(status);if(response.data.resultCode===0){dispatch(setStatus(status));}};export default profileReducer;","map":{"version":3,"names":["profileAPI","ADD_POST","SET_USER_PROFILE","SET_STATUS","initialState","postsDt","id","message","likes","userProfile","status","profileReducer","state","arguments","length","undefined","action","type","newPost","newPostText","addPostActionCreator","text","setUserProfile","setStatus","getUserProfile","userId","dispatch","response","getProfile","data","getUserStatus","getStatus","updateUserStatus","updateStatus","resultCode"],"sources":["C:/Work/React/studying/my-app/src/redux/profileReducer.js"],"sourcesContent":["import { profileAPI } from '../api/api';\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\n\r\nlet initialState = {\r\n    postsDt: [\r\n        {\r\n            id: 1,\r\n            message: 'Hi, how are u?',\r\n            likes: 12\r\n        },\r\n        {\r\n            id: 2,\r\n            message: 'Hi, everybody!',\r\n            likes: 36\r\n        },\r\n        {\r\n            id: 3,\r\n            message: 'OK. And u?',\r\n            likes: 26\r\n        }\r\n    ],\r\n    userProfile: null,\r\n    status: ''\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case ADD_POST:\r\n            /*return {\r\n                ...state,\r\n                postsDt: [...state.postsDt, {\r\n                    id: state.postsDt.length + 1,\r\n                    message: action.newPost,\r\n                    likes: 0\r\n                }]\r\n            };*/\r\n            let newPost = {\r\n                id: state.postsDt.length + 1,\r\n                message: action.newPostText,\r\n                likes: 0\r\n            }\r\n            return {\r\n                ...state,\r\n                postsDt: [...state.postsDt, newPost],\r\n                newPostText: ''\r\n            };\r\n        case SET_USER_PROFILE:\r\n            return {\r\n                ...state,\r\n                userProfile: action.userProfile\r\n            };\r\n        case SET_STATUS:\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            };\r\n        default:\r\n            return state;\r\n    };\r\n};\r\n\r\n//dispatch\r\n//export const addPostActionCreator = (newPost) => ({type: ADD_POST, newPost});\r\nexport const addPostActionCreator = (text) => ({type: ADD_POST, newPostText: text});\r\nexport const setUserProfile = (userProfile) => ({type: SET_USER_PROFILE, userProfile});\r\nexport const setStatus = (status) => ({type: SET_STATUS, status});\r\n\r\n//thunk\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getProfile(userId);\r\n    dispatch(setUserProfile(response.data));\r\n}\r\n\r\nexport const getUserStatus = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(userId);\r\n    dispatch(setStatus(response.data));\r\n}\r\n\r\nexport const updateUserStatus = (status) => async (dispatch) => {\r\n    let response = await profileAPI.updateStatus(status);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status));\r\n    }\r\n}\r\n\r\nexport default profileReducer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}