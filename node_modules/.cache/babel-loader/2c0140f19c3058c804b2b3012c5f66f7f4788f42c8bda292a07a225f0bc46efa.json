{"ast":null,"code":"import { authAPI } from '../api/api';\nconst SET_AUTH_USER_DATA = 'SET_AUTH_USER_DATA';\nlet initialState = {\n  userId: null,\n  email: null,\n  login: null,\n  isAuthorized: false\n};\nconst authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_AUTH_USER_DATA:\n      return {\n        ...state,\n        ...action.data,\n        isAuthorized: true\n      };\n    default:\n      return state;\n  }\n};\n\n//dispatch\nexport const setAuthUserData = (userId, email, login) => ({\n  type: SET_AUTH_USER_DATA,\n  data: {\n    userId,\n    email,\n    login\n  }\n});\n\n//thunk\nexport const getAuthUserData = () => {\n  return dispatch => {\n    authAPI.auth().then(response => {\n      if (response.data.resultCode === 0) {\n        let {\n          id,\n          login,\n          email\n        } = response.data.data;\n        dispatch(setAuthUserData(id, login, email));\n      }\n    });\n  };\n};\nexport const Authorization = (email, password, rememberMe) => {\n  return dispatch => {\n    authAPI.singIn(email, password, rememberMe).then(response => {\n      if (response.data.resultCode === 0) {\n        dispatch(getAuthUserData());\n      }\n    });\n  };\n};\n_c = Authorization;\nexport const logingOut = () => {\n  return dispatch => {\n    authAPI.singOut().then(response => {\n      if (response.data.resultCode === 0) {\n        dispatch(getAuthUserData());\n      }\n    });\n  };\n};\nexport default authReducer;\nvar _c;\n$RefreshReg$(_c, \"Authorization\");","map":{"version":3,"names":["authAPI","SET_AUTH_USER_DATA","initialState","userId","email","login","isAuthorized","authReducer","state","action","type","data","setAuthUserData","getAuthUserData","dispatch","auth","then","response","resultCode","id","Authorization","password","rememberMe","singIn","_c","logingOut","singOut","$RefreshReg$"],"sources":["C:/Work/React/studying/my-app/src/redux/authReducer.js"],"sourcesContent":["import { authAPI } from '../api/api';\r\n\r\nconst SET_AUTH_USER_DATA = 'SET_AUTH_USER_DATA';\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuthorized: false\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case SET_AUTH_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.data,\r\n                isAuthorized: true\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n//dispatch\r\nexport const setAuthUserData = (userId, email, login) => ({type: SET_AUTH_USER_DATA, data: {userId, email, login}});\r\n\r\n//thunk\r\nexport const getAuthUserData = () => {\r\n    return (dispatch) => {\r\n        authAPI.auth()\r\n            .then(response => {\r\n                if (response.data.resultCode === 0) {\r\n                    let {id, login, email} = response.data.data;\r\n                    dispatch(setAuthUserData(id, login, email));\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nexport const Authorization = (email, password, rememberMe) => {\r\n    return (dispatch) => {\r\n        authAPI.singIn(email, password, rememberMe)\r\n            .then(response => {\r\n                if (response.data.resultCode === 0) {\r\n                    dispatch(getAuthUserData());\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nexport const logingOut = () => {\r\n    return (dispatch) => {\r\n        authAPI.singOut()\r\n            .then(response => {\r\n                if (response.data.resultCode === 0) {\r\n                    dispatch(getAuthUserData());\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nexport default authReducer;"],"mappings":"AAAA,SAASA,OAAO,QAAQ,YAAY;AAEpC,MAAMC,kBAAkB,GAAG,oBAAoB;AAE/C,IAAIC,YAAY,GAAG;EACfC,MAAM,EAAE,IAAI;EACZC,KAAK,EAAE,IAAI;EACXC,KAAK,EAAE,IAAI;EACXC,YAAY,EAAE;AAClB,CAAC;AAED,MAAMC,WAAW,GAAGA,CAACC,KAAK,GAAGN,YAAY,EAAEO,MAAM,KAAK;EAClD,QAAOA,MAAM,CAACC,IAAI;IACd,KAAKT,kBAAkB;MACnB,OAAO;QACH,GAAGO,KAAK;QACR,GAAGC,MAAM,CAACE,IAAI;QACdL,YAAY,EAAE;MAClB,CAAC;IACL;MACI,OAAOE,KAAK;EACpB;AACJ,CAAC;;AAED;AACA,OAAO,MAAMI,eAAe,GAAGA,CAACT,MAAM,EAAEC,KAAK,EAAEC,KAAK,MAAM;EAACK,IAAI,EAAET,kBAAkB;EAAEU,IAAI,EAAE;IAACR,MAAM;IAAEC,KAAK;IAAEC;EAAK;AAAC,CAAC,CAAC;;AAEnH;AACA,OAAO,MAAMQ,eAAe,GAAGA,CAAA,KAAM;EACjC,OAAQC,QAAQ,IAAK;IACjBd,OAAO,CAACe,IAAI,CAAC,CAAC,CACTC,IAAI,CAACC,QAAQ,IAAI;MACd,IAAIA,QAAQ,CAACN,IAAI,CAACO,UAAU,KAAK,CAAC,EAAE;QAChC,IAAI;UAACC,EAAE;UAAEd,KAAK;UAAED;QAAK,CAAC,GAAGa,QAAQ,CAACN,IAAI,CAACA,IAAI;QAC3CG,QAAQ,CAACF,eAAe,CAACO,EAAE,EAAEd,KAAK,EAAED,KAAK,CAAC,CAAC;MAC/C;IACJ,CAAC,CAAC;EACV,CAAC;AACL,CAAC;AAED,OAAO,MAAMgB,aAAa,GAAGA,CAAChB,KAAK,EAAEiB,QAAQ,EAAEC,UAAU,KAAK;EAC1D,OAAQR,QAAQ,IAAK;IACjBd,OAAO,CAACuB,MAAM,CAACnB,KAAK,EAAEiB,QAAQ,EAAEC,UAAU,CAAC,CACtCN,IAAI,CAACC,QAAQ,IAAI;MACd,IAAIA,QAAQ,CAACN,IAAI,CAACO,UAAU,KAAK,CAAC,EAAE;QAChCJ,QAAQ,CAACD,eAAe,CAAC,CAAC,CAAC;MAC/B;IACJ,CAAC,CAAC;EACV,CAAC;AACL,CAAC;AAAAW,EAAA,GATYJ,aAAa;AAW1B,OAAO,MAAMK,SAAS,GAAGA,CAAA,KAAM;EAC3B,OAAQX,QAAQ,IAAK;IACjBd,OAAO,CAAC0B,OAAO,CAAC,CAAC,CACZV,IAAI,CAACC,QAAQ,IAAI;MACd,IAAIA,QAAQ,CAACN,IAAI,CAACO,UAAU,KAAK,CAAC,EAAE;QAChCJ,QAAQ,CAACD,eAAe,CAAC,CAAC,CAAC;MAC/B;IACJ,CAAC,CAAC;EACV,CAAC;AACL,CAAC;AAED,eAAeN,WAAW;AAAC,IAAAiB,EAAA;AAAAG,YAAA,CAAAH,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}